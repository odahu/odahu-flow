kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{ .Release.Name }}-connections-resources"
  labels:
        {{- include "odahuflow.helm-labels" (dict "component" "resources" "root" .) | nindent 4 }}
data:
  resources.yaml: |
{{- range $conn := .Values.connections }}
    ---
    kind: Connection
    id: {{ $conn.id }}
    spec:
      {{ toYaml $conn.spec | nindent 6 }}
{{- end }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-connections-resources-uploader"
  labels:
    component: "connections-resources-uploader"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      restartPolicy: OnFailure
      volumes:
        - name: resources
          configMap:
            name: "{{ .Release.Name }}-connections-resources"
      containers:
        - name: connections-resources-uploader
          env:
            - name: API_URL
              value: http://{{ .Release.Name }}-api.{{ .Release.Namespace }}.svc.cluster.local
          image: "{{ include "odahuflow.default-image-name" (dict "root" . "tpl" "%sodahu-flow-cli:%s") }}"
          volumeMounts:
            - mountPath: /opt/odahu-flow-resources
              name: resources
          command:
            - /bin/sh
            - -c
          args: ["
          {{- if .Values.security.mesh_authn -}}
            odahuflowctl login
          --client_id {{ .Values.resource_uploader_sa.client_id }}
          --client_secret {{ .Values.resource_uploader_sa.client_secret }}
          --issuer {{ .Values.oauth_oidc_issuer_url }}
          --url http://{{ .Release.Name }}-api.{{ .Release.Namespace }}.svc.cluster.local
          && {{ end -}}
          odahuflowctl bulk apply /opt/odahu-flow-resources/resources.yaml"]
