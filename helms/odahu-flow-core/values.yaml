# Version of OdahuFlow
# By default .Chart.AppVersion version is used
# Type: string
# odahuFlowVersion: "1.0"

# Does cluster require RBAC
# Type: bool
rbac: true

# Docker images registry
# This registry will be used for automatic docker image name deduction based on OdahuFlow naming for images
# Each image could be overridden manually in .<service>.image, please see .api root section or other
# Type: string
imagesRegistry: odahu/

# Verbosity of logging features in components
# Valid values are:
# - info
# - debug
# - warning
# - error
logLevel: info


# EDGE gateway
# It handles all income traffic for model invocation
#  and it does JWT validation of requests if it is enabled
edge:
  # Knative namespace name
  # Type: str
  knative_namespace: knative-serving

  # Ingress object configuration
  ingress:
    # Custom enabling/disabling of Ingress resource for EDGE
    # To use specific value, uncomment and replace ~ with target value
    # Type: bool
    #enabled: ~

    # Annotations for ingress
    # Will be added to global annotations (.ingress.annotations)
    # Type: string->string map
    annotations: {}

    # Custom domain name
    # By default domain name "edge.<..ingress.globalDomain>" is used
    # To use specific value, uncomment and replace ~ with target value
    # Type: string
    #domain: ~

    # Is TLS enabled for this Ingress or not
    # By default global variable is used (.ingress.tlsEnabled)
    # To use specific value, uncomment and replace ~ with target value
    # Type: string
    #tlsEnabled: ~

    # Global TLS secret name
    # By default global variable is used (.ingress.tlsSecretName)
    # To use specific value, uncomment and replace ~ with target value
    # Type: string
    #tlsSecretName: ~

# Configuration of OdahuFlow ingresses
# Ingresses are for next <service>s
# - api
ingress:
  # Global flag for Ingress enabling
  # Each Ingress could be configured manually in .<service>.ingress.enabled
  # Type: bool
  enabled: false

  # Root domain for auto-created Ingress domains.
  # Each domain could be configured manually in .<service>.ingress.domain
  # Also it controls building URLs for external resources such as auth endpoint
  # Type: string
  globalDomain: example.com

  # Global annotations for all services
  # Each Ingress could be configured manually in .<service>.ingress.annotations
  # Type: string->string map
  annotations: {}
  #  kubernetes.io/ingress.class: nginx
  #  kubernetes.io/tls-acme: "true"

  # Global TLS flag
  # Each Ingress could be configured manually in .<service>.ingress.tlsEnabled
  # Also it controls building URLs for external resources such as auth endpoint
  # Type: bool
  tlsEnabled: false

  # Global TLS secret name
  # Each Ingress could be configured manually in .<service>.ingress.tlsSecretName
  # Type: string
  tlsSecretName: ~

# Security configuration. Model API security configures in .modelApiSecurity section (see below)
security:
  # Is authorization for WEB requests enabled or not
  # Type: bool
  enabled: false

  # Type of authorization. Currently only oauth2_proxy is supported
  # Valid values are:
  # - oauth2_proxy
  integration: oauth2_proxy

  # Detail configuration of oauth2_proxy
  oauth2_proxy:
    # Internal URL of oauth2_proxy that will be called on each Ingress request. Is used in auth_request directive on Ingress Nginx
    # Type: string
    url: http://oauth2-proxy.kube-system.svc.cluster.local:4180/oauth2/auth

    # Public URL on which user will be redirected for authrorization
    # Uncomment for custom public URL, otherwise auth.<ingress.globalDomain> will be used
    # besides standard Nginx Ingress variables, escaped_request_uri is available too
    # Type: string
    # public_url: https://auth.my-company.com/oauth2/start?rd=https://$host$escaped_request_uri

    # OAuth's cookie name
    # Is required to add fix for big-sized cookies
    # SHOULD be same as in oauth2 proxy configuration
    # Type: string
    cookieName: _oauth2_proxy

# Components metrics measurement
# Measures components performance through prometheus protocol
metrics:
  # Is measurements enabled or not
  # Type: bool
  enabled: false

  # Labels for ServiceMonitor CR objects
  # Type: string -> string map
  serviceMonitoringLabels:
    monitoring: prometheus

  # Grafana directory where the odahuFlow dashboards will be saved
  # Type: string
  dashboardFolder: ""

# Default connections. Will be spawned on cluster start
# For more information, read the VCSCredential documentation. Example:
# - id: "odahu-flow"
#   spec:
#     type: "git"
#     uri: "git@github.com:odahu/odahu-flow.git"
#     reference: "origin/develop"
#     keySecret: ""
connections: []

# Feedback configuration
feedback:
  # Is feedback gathering stack enabled or not
  enabled: false

  # Name of the Istio namespace
  # Type: string
  istio_namespace: istio-system

  # Aggregator accepts HTTP traffic with "feedback" for previously made predictions
  rq_catcher:
    # This variable can be enabled to setup custom image name for rq-catcher
    # Type: string
    # image: custom-image:1.0

    # The list of headers which will be skipped during feedback
    # Pay attention! The headers must be in lowercase format.
    # Type: list of strings
    prohibited_headers:
      - authorization
      - x-jwt
      - x-user
      - x-email

    # Resources for each instance
    # For declaration format see https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "100m"
        memory: "256Mi"

  # Collector accepts HTTP traffic with "feedback" for previously made predictions
  collector:
    # This variable can be enabled to setup custom image name for Collector
    # Type: string
    # image: custom-image:1.0

    # Count of Collector replicas
    # Type: integer
    replicas: 1

    # Resources for each instance
    # For declaration format see https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "100m"
        memory: "256Mi"

    # Input port number
    # Type: integer
    port: 8080

  fluentd:
    host: fluentd.fluentd.svc.cluster.local
    port: 24224

# Operator configuration
# Operator handles all OdahuFlow's CustomResources such as ModelTraining and etc.
operator:
  # Operator's server configuration
  # It listens Kubernetes API for OdahuFlow CR update events
  #  and creates/updates appropriate Pods / Secrets
  server:
    # This variable can be uncommented to setup custom image name for operator (server)
    # Type: string
    # image: custom-image:1.0

    # Count of operator replicas
    # Type: integer
    replicas: 1

    # Resources for each instance
    # For declaration format see https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    resources:
      limits:
        cpu: "128m"
        memory: "256Mi"
      requests:
        cpu: "128m"
        memory: "256Mi"

# API server configuration
# It provides HTTP API for model training & model deployment management
#  also it creates JWT tokens for model invocation
api:
  # API could be disabled
  # Type: bool
  enabled: true

  # This variable can be uncommented to setup custom image name for api (server)
  # Type: string
  # image: custom-image:1.0

  # Count of API replicas
  # Type: integer
  replicas: 1

  # Maximum number of retries for K8S API calls
  # Type: integer
  k8sApiRetryNumberMaxLimit: 10

  # Delay between retries for K8S API calls
  # Type: integer
  k8sApiRetryDelaySec: 3

  # Port on which API listens income traffic
  # Type: integer
  port: 80

  # Resources for each instance
  # For declaration format see https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  resources:
    requests:
      cpu: "50m"
      memory: "256Mi"
    limits:
      cpu: "100m"
      memory: "256Mi"

  # Configuration of ingress object
  ingress:
    # Custom enabling/disabling of Ingress resource for API
    # To use specific value, uncomment and replace ~ with target value
    # Type: bool
    # enabled: ~

    # Annotations for ingress
    # Will be added to global annotations (.ingress.annotations)
    # Type: string->string map
    annotations: {}

    # Custom domain name
    # By default domain name "api.<..ingress.globalDomain>" is used
    # To use specific value, replace ~ with target value
    # Type: string
    # domain: ~

  # Extra API volume
  # Example:
  # - name: vault-tls
  #   secret:
  #     secretName: vault-tls
  volumes: []

  # Extra API volume mounts
  # Example:
  # - name: vault-tls
  #   mountPath: /vault/tls
  volumeMounts: []

  # Extra API environment variables
  # Example:
  #  VAULT_CAPATH: /vault/tls
  env: []

# Service catalog server configuration
service_catalog:
  # service catalog could be disabled
  # Type: bool
  enabled: true

  # This variable can be uncommented to setup custom image name for service catalog (server)
  # Type: string
  # image: custom-image:1.0

  # Count of service catalog replicas
  # Type: integer
  replicas: 1

  # Resources for each instance
  # For declaration format see https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "100m"
      memory: "256Mi"

# OdahuFlow services configuration
config:
  # Common configuration
  common:
    # The collection of external urls, for example: metrics, edge, service catalog and so on
    # Type: string->string map
    external_urls: []
  # Operator configuration
  operator:
    # The in-cluster API url
    # Type: string->string
    api_url: http://odahu-flow-api.odahu-flow.svc.cluster.local
  # Connection configuration
  connection:
    # Enable connection API/operator
    # Type: boolean
    enabled: true
    # Storage backend for connections. Available options:
    #   * kubernetes
    #   * vault
    # Type: string
    repository_type: kubernetes
    # TODO: Remove after implementation of the issue https://github.com/legion-platform/legion/issues/1008
    # Type: string
    decrypt_token: ""
    # Vault storage backend configuration
    vault:
      # Vault URL
      # Type: string
      url: ""
      # Vault secret engine path where connection will be stored
      # Type: string
      secret_engine_path: ""
      # Vault role for access to the secret engine path
      # Type: string
      role: ""
      # Optionally. Token for access to the vault server
      # Type: string
      token: ""
  # Deployment configuration
  deployment:
    # Enable deployment API/operator
    # Type: boolean
    enabled: true
    # Model deployment namespace
    # Required value
    # Type: string
    namespace: odahu-flow-deployment
    # Security settings for model deployments
    security:
      # Default role name for model deployments
      # Required value
      # Type: string
      role_name: test
      jwks:
        # Is model authorization enabled
        # Type: bool
        enabled: false
        # Jwks url for mode authorization
        # Type: string
        url: example
        # The Issuer Identifier for model authorization
        # Type: string
        issuer: example

  # Training configuration
  training:
    # Enable training API/operator
    # Type: boolean
    enabled: true
    # Training namespace
    # Required value
    # Type: string
    namespace: odahu-flow-training
    # Determine where training artifact will be saved
    # Required value
    # Type: string
    output_connection: models-output
    # Model trainer settings
    model_trainer:
      # Model training base image
      # Required value
      # Type: string
      # image: "odahu/odahu-flow-model-trainer:latest"
    model_validator:
      # Model training base image
      # Required value
      # Type: string
      # image: "odahu/odahu-flow-сli:latest"

  # Packaging configuration
  packaging:
    # Enable packaging API/operator
    # Type: boolean
    enabled: true
    # Packaging namespace
    # Required value
    # Type: string
    namespace: odahu-flow-packaging
    # Determine where training artifact will be saved
    # Required value
    # Type: string
    output_connection: models-output
    # Service account for packager pods
    # Required value
    # Type: string
    service_account: odahu-flow-model-packager
    # Model packager settings
    model_packager:
      # Model packager base image
      # Required value
      # Type: string
      # image: "odahu-flow-model-packager:latest"

  # Service catalog configuration
  service_catalog:
    # Base URL prefix for the model deployment swagger UI
    # Type: string
    base_url: /service-catalog
