version: 2.1
workflows:
  main:
    jobs:
      - vulnerabilities
      - test_coverage
      - python:
          requires:
            - test_coverage
      - operator:
          requires:
            - test_coverage
      - feedback_aggregator:
          requires:
            - test_coverage
      - build:
          context:
            - hub.docker.com
          requires:
            - vulnerabilities
            - test_coverage
jobs:
  vulnerabilities:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run: sudo make install-vulnerabilities-checker
      - run: make check-vulnerabilities
  python:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run:
          name: Setup miniconda
          command: |
            wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
            bash miniconda.sh -b -p $HOME/miniconda
      - run:
          name: Install deps
          command: |
            source "$HOME/miniconda/etc/profile.d/conda.sh"
            make install-all
            make install-python-tests
            make install-python-linter
      - run:
          name: Lint
          command: |
            make python-lint
      - attach_workspace:
          at: /tmp/codecov-uploader
      - run:
          name: Test
          command: |
            source "$HOME/miniconda/etc/profile.d/conda.sh"
            make python-unittests
            /tmp/codecov-uploader/codecov -f coverage.xml -vF python
  operator:
    machine:
      image: ubuntu-2004:202010-01
    working_directory: /home/circleci/go/src/github.com/odahu/odahu-flow
    steps:
      - checkout
      - run:
          name: Setup deps
          command: |
            sudo apt-get update -qq
            sudo apt-get install pigz golang-1.14
            wget -q https://github.com/golangci/golangci-lint/releases/download/v1.30.0/golangci-lint-1.30.0-linux-amd64.tar.gz -O /tmp/golangci-lint.tar.gz
            sudo tar -zxvf /tmp/golangci-lint.tar.gz -C /usr/local/
            sudo mv /usr/local/golangci-lint*/golangci-lint /usr/bin/golangci-lint
            wget -q https://github.com/kubernetes-sigs/kubebuilder/releases/download/v2.3.1/kubebuilder_2.3.1_linux_amd64.tar.gz -O /tmp/kubebuilder.tar.gz
            sudo tar -zxvf /tmp/kubebuilder.tar.gz -C /usr/local/
            sudo mv /usr/local/kubebuilder_* /usr/local/kubebuilder
            wget -q https://github.com/swaggo/swag/releases/download/v1.6.5/swag_1.6.5_Linux_x86_64.tar.gz -O /tmp/swag.tar.gz
            sudo tar -zxvf /tmp/swag.tar.gz -C /usr/local/
            sudo mv /usr/local/swag /usr/bin/
            wget -q https://github.com/gotestyourself/gotestsum/releases/download/v0.5.0/gotestsum_0.5.0_linux_amd64.tar.gz -O /tmp/gotestsum.tar.gz
            sudo tar -zxvf /tmp/gotestsum.tar.gz -C /usr/local/
            sudo mv /usr/local/gotestsum* /usr/bin/gotestsum
            go get github.com/t-yuki/gocover-cobertura
      - restore_cache:
          keys:
            - v1-lint-cache-{{ .Branch }}
            - v1-lint-cache
      - restore_cache:
          keys:
            - v1-go-mod-{{ checksum "packages/operator/go.sum" }}
            - v1-go-mod
      - run:
          name: Lint
          command: |
            cd packages/operator
            make lint
      - attach_workspace:
          at: /tmp/codecov-uploader
      - run:
          name: Test
          command: |
            cd packages/operator
            make test
            /tmp/codecov-uploader/codecov -vF go,operator
      - save_cache:
          key: v1-lint-cache-{{ .Branch }}
          paths:
            - /home/circleci/.cache/golangci-lint
      - save_cache:
          key: v1-go-mod-{{ checksum "packages/operator/go.sum" }}
          paths:
            - /home/circleci/.go_workspace/pkg/mod
            - /home/circleci/.cache/go-build
  feedback_aggregator:
    docker:
      - image: circleci/golang:1.14
    working_directory: /go/src/github.com/odahu/odahu-flow
    steps:
      - checkout
      - run:
          name: Setup deps
          command: |
            sudo apt-get update -qq --allow-releaseinfo-change
            wget -q https://github.com/golangci/golangci-lint/releases/download/v1.30.0/golangci-lint-1.30.0-linux-amd64.tar.gz -O /tmp/golangci-lint.tar.gz
            sudo tar -zxvf /tmp/golangci-lint.tar.gz -C /usr/local/
            sudo mv /usr/local/golangci-lint*/golangci-lint /usr/bin/golangci-lint
            wget -q https://github.com/gotestyourself/gotestsum/releases/download/v0.3.4/gotestsum_0.3.4_linux_amd64.tar.gz -O /tmp/gotestsum.tar.gz
            sudo tar -zxvf /tmp/gotestsum.tar.gz -C /usr/local/
            sudo mv /usr/local/gotestsum* /usr/bin/gotestsum
            go get github.com/t-yuki/gocover-cobertura
      - run:
          name: Lint
          command: |
            cd packages/feedback
            make lint
      - attach_workspace:
          at: /tmp/codecov-uploader
      - run:
          name: Test
          command: |
            cd packages/feedback
            make test
            /tmp/codecov-uploader/codecov -vF go,feedback
  test_coverage:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - run:
          name: Prepare
          command: |
            # Codecov uploader https://docs.codecov.com/docs/codecov-uploader
            curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
            curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
            gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
            shasum -a 256 -c codecov.SHA256SUM
            chmod +x codecov
      - persist_to_workspace:
          root: .
          paths:
            - codecov
  build:
    docker:
      - image: cimg/base:stable-20.04
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - setup_remote_docker
      - run: make docker-build-robot-tests
      - run: make docker-build-feedback-collector
      - run: make docker-build-feedback-rq-catcher
      - run: make docker-build-api
      - run: make docker-build-operator
      - run: make docker-build-model-trainer
      - run: make docker-build-model-packager
      - run: make docker-build-service-catalog
