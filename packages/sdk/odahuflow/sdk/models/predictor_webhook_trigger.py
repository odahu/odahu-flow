# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from odahuflow.sdk.models.base_model_ import Model
from odahuflow.sdk.models import util


class PredictorWebhookTrigger(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None):  # noqa: E501
        """PredictorWebhookTrigger - a model defined in Swagger

        :param enabled: The enabled of this PredictorWebhookTrigger.  # noqa: E501
        :type enabled: bool
        """
        self.swagger_types = {
            'enabled': bool
        }

        self.attribute_map = {
            'enabled': 'enabled'
        }

        self._enabled = enabled

    @classmethod
    def from_dict(cls, dikt) -> 'PredictorWebhookTrigger':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PredictorWebhookTrigger of this PredictorWebhookTrigger.  # noqa: E501
        :rtype: PredictorWebhookTrigger
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self) -> bool:
        """Gets the enabled of this PredictorWebhookTrigger.

        Enabled. If True then it possible to run InferenceJob by creating it using REST API  # noqa: E501

        :return: The enabled of this PredictorWebhookTrigger.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled: bool):
        """Sets the enabled of this PredictorWebhookTrigger.

        Enabled. If True then it possible to run InferenceJob by creating it using REST API  # noqa: E501

        :param enabled: The enabled of this PredictorWebhookTrigger.
        :type enabled: bool
        """

        self._enabled = enabled
