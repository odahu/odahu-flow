// Code generated by mockery v2.2.1. DO NOT EDIT.

package mocks

import (
	types "github.com/odahu/odahu-flow/packages/operator/pkg/controller/types"
	mock "github.com/stretchr/testify/mock"
)

// RuntimeAdapter is an autogenerated mock type for the RuntimeAdapter type
type RuntimeAdapter struct {
	mock.Mock
}

// GetFromRuntime provides a mock function with given fields: id
func (_m *RuntimeAdapter) GetFromRuntime(id string) (types.RuntimeEntity, error) {
	ret := _m.Called(id)

	var r0 types.RuntimeEntity
	if rf, ok := ret.Get(0).(func(string) types.RuntimeEntity); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(types.RuntimeEntity)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetFromStorage provides a mock function with given fields: id
func (_m *RuntimeAdapter) GetFromStorage(id string) (types.StorageEntity, error) {
	ret := _m.Called(id)

	var r0 types.StorageEntity
	if rf, ok := ret.Get(0).(func(string) types.StorageEntity); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(types.StorageEntity)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListRuntime provides a mock function with given fields:
func (_m *RuntimeAdapter) ListRuntime() ([]types.RuntimeEntity, error) {
	ret := _m.Called()

	var r0 []types.RuntimeEntity
	if rf, ok := ret.Get(0).(func() []types.RuntimeEntity); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]types.RuntimeEntity)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListStorage provides a mock function with given fields:
func (_m *RuntimeAdapter) ListStorage() ([]types.StorageEntity, error) {
	ret := _m.Called()

	var r0 []types.StorageEntity
	if rf, ok := ret.Get(0).(func() []types.StorageEntity); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]types.StorageEntity)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SubscribeRuntimeUpdates provides a mock function with given fields: hook
func (_m *RuntimeAdapter) SubscribeRuntimeUpdates(hook types.StatusPollingHookFunc) error {
	ret := _m.Called(hook)

	var r0 error
	if rf, ok := ret.Get(0).(func(types.StatusPollingHookFunc) error); ok {
		r0 = rf(hook)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
